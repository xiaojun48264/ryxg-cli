import{spawn as f}from"node:child_process";import{fileURLToPath as d,URL as g}from"node:url";import{getPortPromise as v}from"portfinder";import{createLauncher as w}from"./index.mjs";import P from"node:path";import{isFilterFiles as S}from"../utils/tools.mjs";var m=(r,t,e)=>{if(!t.has(r))throw TypeError("Cannot "+e)},s=(r,t,e)=>(m(r,t,"read from private field"),e?e.call(r):t.get(r)),l=(r,t,e)=>{if(t.has(r))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(r):t.set(r,e)},u=(r,t,e,i)=>(m(r,t,"write to private field"),i?i.call(r,e):t.set(r,e),e),p,h,a,c;class y{constructor(){l(this,p,void 0),l(this,h,!1),l(this,a,null),l(this,c,0)}async startHttpServer(t){const e=process.env.HBuilderProcessId||"",i=d(new g("../../../service/httpServer.mjs",import.meta.url));u(this,p,f("node",[i,t,e],{stdio:[process.stdin,process.stdout,process.stderr]})),process.on("exit",()=>{s(this,p)?.kill()})}createHttpPortAgent(){u(this,h,!0)}async runDevice(t){const{platform:e}=t;e==="android"&&(u(this,c,await v()),s(this,h)||this.startHttpServer(s(this,c).toString()),u(this,a,w(e)),await s(this,a).run(t))}filterSpecialFile(t=[],e=""){let i=[];if(e&&s(this,a)){const o=s(this,a).getCurrentApp();if(o){let n=o.getProject();n&&(e=n.getPath())}}if(e)return t;for(let o of t){let n=P.resolve(e,o);o.startsWith(e)&&(n=o),S(e,n,!0)||i.push(o)}return i}pushResources(t){const e=t.compilePath,i=this.filterSpecialFile([],t.compilePath);i&&s(this,a)&&s(this,a).getRunningState()===1&&s(this,a).pushResource(i,e,-1,t)}async stopRun(t){}async getRemoteDebugUrl(){}async restartApp(){}async weexDebug(){}async installPackage(){}getHttpPort(){return s(this,c)}getChildProcess(){return s(this,p)}getIsStartHttpServer(){return s(this,h)}killNode(){}getLauncher(){return s(this,a)}}p=new WeakMap,h=new WeakMap,a=new WeakMap,c=new WeakMap;export{y as DeviceLauncher};
